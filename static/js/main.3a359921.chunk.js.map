{"version":3,"sources":["containers/LoginPage.module.scss","containers/LoginPage.js","Home.js","api.js","Search.js","AdvOne.js","AdvTwo.js","Reviews.js","CourseDetails.js","App.js","index.js"],"names":["module","exports","LoginPage","className","styles","login","content","Component","Home","query","sql","axios","get","then","response","data","ResultCard","props","items","console","log","results","result","push","to","Search","useState","lastSearch","setLastSearch","search","setSearch","setResults","onEnter","e","a","key","tsearch","trim","re","num_matches","match","num","replace","columns","map","c","join","matches","slice","type","placeholder","value","onChange","target","onKeyDown","AdvancedQueryOne","bestProfs","setBestProfs","useEffect","res","newBestProfs","elem","i","style","width","AdvancedQueryTwo","mostRated","setMostRated","newMostRated","Reviews","student","setStudent","reviews","setReviews","dept","setDept","depts","setDepts","course","setCourse","courses","setCourses","offering","setOffering","offerings","setOfferings","professor","setProfessor","professors","setProfessors","review","setReview","reviewInput","setReviewInput","ratingInput","setRatingInput","updateReviews","newReviews","ddepartmentId","courseNumber","crn","semester","name","rating","newDepts","id","newCourses","number","title","newOfferings","CRN","newProfessors","relationId","length","d","o","p","height","onClick","old","reviewId","addReview","r","CourseDetails","useParams","queryStr","src","alt","float","alignSelf","App","basename","process","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a359921.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__l71u_\",\"content\":\"LoginPage_content__2i7Wj\"};","import React, { Component } from 'react'\nimport styles from '../containers/LoginPage.module.scss';\n\nclass LoginPage extends Component {\n    render() {\n        return (\n            <div className={styles.login}>\n                <div className={styles.content}>\n                    <h1>RateMIProfessors</h1>\n                    <p>Click here to log in!</p>\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default LoginPage; ","import './Style.css'\n\nfunction Home() {\n    return (\n    <div className=\"home\">\n        <div className=\"home-body\">\n            RateMIProfessor is a website designed for UIUC students to find and post reviews for specific professors and the\n            classes that they teach. If you want to search for a professor and see their reviews, you can use the \"Search\" tab\n            above. If you want to use the two advanced queries written for the site, click on Advanced Query 1/2. Finally, to see reviews,\n            go to \"Reviews\". \n        </div>\n    </div>)\n   \n}\n\nexport default Home;","import axios from 'axios';\n\n\n\nfunction query(sql){\n    return axios.get(`https://us-central1-cs411-project-328717.cloudfunctions.net/forward?query=${sql}`)\n        .then((response) => response.data[\"results\"]);\n    //return axios.get(`http://127.0.0.1:8000/forward?query=${sql}`);\n    // return axios.get('https://pokeapi.co/api/v2/pokemon/');\n    // .then((response) => {\n    //     response.data;\n    // });\n}\n\n//async function query(sql: string){\n//     const res = await fetch(`https://us-central1-cs411-project-328717.cloudfunctions.net/forward?query=${sql}`);\n    \n// }\n\nexport default query;","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport query from \"./api\";\nimport './Style.css'\n\nfunction ResultCard(props) {\n\n\n    let items = [];\n    console.log(props.results)\n    for (const result of props.results) {\n        items.push(\n            <Link className=\"p-4 flex space-x-4\" to={`/course/${result[3]}`}>\n                <p className=\"w-100px\">{result[3]}</p>\n                <p>{result[4]}</p>\n            </Link>\n        // <p>{`${result[3]} - ${result[4]}`}</p>\n        )\n    }\n\n    return <div className=\"flex justify-center px-10 pt-10 pb-10 w-screen\">\n        <div className=\"w-11/12 border-2 border-gray-400 rounded-lg divide-y divide-gray-100\">\n\n\n        {/* ${JSON.stringify(props.results)} */}\n        {items}\n\n        </div>\n    </div>\n}\n\nfunction Search() {\n    const [lastSearch, setLastSearch] = useState('')\n    const [search, setSearch] = useState('')\n    const [results, setResults] = useState([])\n    \n    const onEnter = async (e) => {\n        if (e.key !== \"Enter\") return;\n        console.log(`Enter Pressed: ${search}`)\n\n        if (search === lastSearch) return;\n        console.log(\"Running search\")\n\n        let tsearch = search.trim();\n\n        const re = /\\d+$/;\n        let num_matches =  tsearch.match(re);\n        let num;\n\n        if (num_matches) {\n            num = num_matches[0];\n            tsearch = tsearch.replace(re, '').trim();\n        }\n\n        // let columns = await apiGetColumnNames(\"Departments\");\n        let columns = ['id', 'name', 'college', 'title'];\n        console.log(columns);\n        \n        let sql = `\n            SELECT college, id, name, courseNumber, title\n            FROM Departments JOIN Courses ON id=departmentId\n            `\n        \n        if (num || tsearch) {\n            sql += \" WHERE \"\n        }\n\n        if (tsearch) {\n            sql += \" ( \"\n            sql += columns.map(c => ` ${c} LIKE '%${tsearch}%' `).join(\" OR \")\n            sql += \" ) \"\n\n            if (num) {\n                sql += \" AND \"\n            }\n        }\n\n        if (num) {\n            sql += \" ( \"\n            sql += ` courseNumber LIKE '%_${num}%' `\n            sql += \" ) \"\n        }\n\n        console.log(sql);\n\n        let matches = await query(sql);\n        matches = matches.slice(0, 50);\n        console.log(matches);\n\n        if (matches === results) return;\n        setResults(matches);\n        setLastSearch(search);\n    }\n\n    // useEffect(() => {\n    //     query\n    // });\n\n    return <body>\n    <section className=\"body\">\n        <div>\n            <div className=\"logo\"></div>\n            <div className=\"page_txt\"> Enter your query here </div>\n            <div className=\"flex justify-center pt-10 pb-10\">\n                <div className=\"body_txt\">\n                    <input\n                        className=\"border-2 border-gray-400 h-12 px-2 rounded-lg w-100\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        value={search}\n                        onChange={(e) => setSearch(e.target.value)}\n                        onKeyDown={onEnter}\n                    />\n                </div>\n            </div>  \n            <div className=\"flex justify-center\">\n                <ResultCard results={results} />\n            </div>\n        </div>\n    </section>\n</body>\n}\n\nexport default Search;","import './Style.css'\nimport query from './api'\nimport { useEffect, useState } from 'react';\n\n\nfunction AdvancedQueryOne() {\n    const [bestProfs, setBestProfs] = useState([]);\n\n    // get best professors\n    useEffect(() => {\n        var s = `SELECT professor, AVG(rating) AS avgRating \n        FROM OfferingsToProfessorRelations opr JOIN Reviews r ON opr.id = r.offeringToProfessorRelation \n        GROUP BY professor HAVING COUNT(rating) > 0 \n        ORDER BY avgRating DESC LIMIT 15;`;\n\n        query(s).then(res => {\n            let newBestProfs = res.map((elem, i) => {\n                return <div className=\"p-1 flex space-x-4\" key={i}>\n                        <p style={{width: \"20px\"}}>{`${i+1}.`}</p>\n                        <p style={{width: \"100px\"}}>{elem[0]}</p>\n                        <p>{`${elem[1]}/5`}</p>\n                    </div>\n            });\n            setBestProfs(newBestProfs);\n            // console.log(newBestProfs);\n        });\n    }, []);\n\n    return <body>\n    <div className=\"logo\"></div>\n    <section className=\"body\">\n        <div className=\"page_txt\">\n            <div>This is the page for the first advanced query, which returns top 15 best rated professors.</div>\n                <div>\n                    Here are the fifteen professors with the highest reviews:\n                    {bestProfs}\n                </div>\n        </div>\n    </section>\n</body>\n}\n\nexport default AdvancedQueryOne;","import './Style.css'\nimport query from './api'\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction AdvancedQueryTwo() {\n    const [mostRated, setMostRated] = useState([]);\n\n    // get most rated courses\n    useEffect(() => {\n        var s = `SELECT courseNumber, COUNT(rating) as ratingCount\n                FROM Offerings o\n                JOIN OfferingsToProfessorRelations opr ON o.id = opr.offering\n                JOIN Reviews r ON r.offeringToProfessorRelation = opr.id\n                GROUP BY courseNumber ORDER BY ratingCount DESC LIMIT 15;`\n\n        query(s).then(res => {\n            let newMostRated = res.map((elem, i) => {\n                return <Link style={{width: \"fit-content\"}}className=\"p-1 flex space-x-4\" to={`/course/${elem[0]}`}>\n                    <p style={{ width: \"20px\" }}>{`${i + 1}.`}</p>\n                    <p style={{ width: \"100px\" }}>{elem[0]}</p>\n                    <p>{`${elem[1]} reviews`}</p>\n                </Link>\n            });\n            setMostRated(newMostRated);\n        });\n    }, []);\n\n    return <body>\n        <div className=\"logo\"></div>\n        <section className=\"body\">\n            <div className=\"page_txt\">\n                <div>This is the page for the second advanced query, which returns the 15 most reviewed courses.</div>\n                <div>\n                    Here are the fifteen courses with the most reviews:\n                    {mostRated}\n                </div>\n            </div>\n        </section>\n    </body>\n}\n\nexport default AdvancedQueryTwo;\n\n\n\n\n\n\n\n","import { useEffect, useState } from \"react\";\nimport query from \"./api\";\nimport './Style.css'\n\nfunction Reviews() {\n    const [student, setStudent] = useState(\"\");\n    const [reviews, setReviews] = useState([]);\n    const [dept, setDept] = useState(\"\");\n    const [depts, setDepts] = useState([]);\n    const [course, setCourse] = useState(\"\");\n    const [courses, setCourses] = useState([]);\n    const [offering, setOffering] = useState(\"\");\n    const [offerings, setOfferings] = useState([]);\n    const [professor, setProfessor] = useState(\"\");\n    const [professors, setProfessors] = useState([]);\n    const [review, setReview] = useState(null);\n    const [reviewInput, setReviewInput] = useState(\"\");\n    const [ratingInput, setRatingInput] = useState(5);\n\n    //get existing reviews\n    function updateReviews() {\n        const fields = \"c.departmentId, courseNumber, crn, semester, professor, name, rating, review\";\n        const tables =\n        `Courses c\n        NATURAL JOIN Offerings o\n        JOIN OfferingsToProfessorRelations opr ON opr.offering = o.id\n        JOIN Reviews r ON r.offeringToProfessorRelation = opr.id\n        JOIN Professors p ON opr.professor = p.netid`;\n        query(`SELECT ${fields} FROM ${tables} WHERE student = \"${student}\";`).then(res => {\n            let newReviews = res.map(elem => {\n                return {\n                    ddepartmentId: elem[0],\n                    courseNumber: elem[1],\n                    crn: elem[2],\n                    semester: elem[3],\n                    professor: elem[4],\n                    name: elem[5],\n                    rating: elem[6],\n                    review: elem[7]\n                }\n            });\n            setReviews(newReviews);\n        });\n    }\n\n    useEffect(() => {\n        const fields = \"c.departmentId, courseNumber, crn, semester, professor, name, rating, review\";\n        const tables =\n        `Courses c\n        NATURAL JOIN Offerings o\n        JOIN OfferingsToProfessorRelations opr ON opr.offering = o.id\n        JOIN Reviews r ON r.offeringToProfessorRelation = opr.id\n        JOIN Professors p ON opr.professor = p.netid`;\n        query(`SELECT ${fields} FROM ${tables} WHERE student = \"${student}\";`).then(res => {\n            let newReviews = res.map(elem => {\n                return {\n                    ddepartmentId: elem[0],\n                    courseNumber: elem[1],\n                    crn: elem[2],\n                    semester: elem[3],\n                    professor: elem[4],\n                    name: elem[5],\n                    rating: elem[6],\n                    review: elem[7]\n                }\n            });\n            setReviews(newReviews);\n        });\n    }, [student])\n\n    //get departments\n    useEffect(() => {\n        query('SELECT id, name FROM Departments ORDER BY id;').then(res => {\n            let newDepts = res.map(elem => {\n                return {\n                    id: elem[0],\n                    name: elem[1]\n                }\n            });\n            setDepts(newDepts);\n        });\n    }, []);\n\n    //get courses in the department\n    useEffect(() => {\n        setCourse(\"\");\n        setCourses([]);\n        if (!dept) return;\n        query(`SELECT courseNumber, title FROM Courses WHERE departmentId = \"${dept}\" ORDER BY courseNumber;`).then(res => {\n            let newCourses = res.map(elem => {\n                return {\n                    number: elem[0],\n                    title: elem[1]\n                }\n            });\n            setCourses(newCourses);\n        });\n    }, [dept]);\n\n    //get offerings of the course\n    useEffect(() => {\n        setOffering(\"\");\n        setOfferings([]);\n        if (!course) return;\n        query(`SELECT id, CRN, semester FROM Offerings WHERE courseNumber = \"${course}\" ORDER BY semester, CRN;`).then(res => {\n            let newOfferings = res.map(elem => {\n                return {\n                    id: elem[0],\n                    CRN: elem[1],\n                    semester: elem[2]\n                }\n            });\n            setOfferings(newOfferings);\n        })\n    }, [course]);\n\n    //get professors who taught the class\n    useEffect(() => {\n        setProfessor(\"\");\n        setProfessors([]);\n        if (!offering) return;\n        query(`SELECT id, name FROM OfferingsToProfessorRelations JOIN Professors ON professor=netid WHERE offering=\"${offering}\" ORDER BY name;`).then(res => {\n            let newProfessors = res.map(elem => {\n                return {\n                    relationId: elem[0],\n                    name: elem[1]\n                }\n            });\n            setProfessors(newProfessors);\n        })\n    }, [offering]);\n\n    useEffect(() => {\n        setReview(null);\n        setReviewInput(\"\");\n        setRatingInput(5);\n        if (!(professor && student)) return;\n        query(`SELECT id, rating, review FROM Reviews WHERE student = \"${student}\" AND offeringToProfessorRelation = \"${professor}\"`).then(res => {\n            if (!res.length) return;\n            setReview({\n                id: res[0][0],\n                rating: res[0][1],\n                review: res[0][2]\n            });\n            setReviewInput(res[0][2]);\n            setRatingInput(res[0][1]);\n        })\n    }, [professor, student]);\n\n    function addReview() {\n        let reviewId = `review-${student}-${professor}`;\n        query(`INSERT INTO Reviews VALUES (\"${reviewId}\", ${ratingInput}, \"${reviewInput}\", \"${student}\", \"${professor}\");`).then(() => {\n            setReview({\n                id: reviewId,\n                rating: ratingInput,\n                review: reviewInput\n            });\n        });\n        updateReviews();\n    };\n\n    function updateReview() {\n        query(`UPDATE Reviews SET review=\"${reviewInput}\", rating=${ratingInput} WHERE id = \"${review.id}\";`).then(() => {\n            setReview((old) => {\n                return {\n                    id: old.id,\n                    rating: ratingInput,\n                    review: reviewInput\n                }\n            });\n        });\n        updateReviews();\n    };\n\n    function deleteReview() {\n        query(`DELETE FROM Reviews WHERE id=\"${review.id}\"`).then(() => {\n            setReview(null);\n            setReviewInput(\"\");\n            setRatingInput(5);\n        });\n        updateReviews();\n    };\n\n    return <body>\n        <div className=\"logo\"></div>\n        <section className=\"body_txt\">\n            <div>\n                <div className=\"page_txt\">\n                    <body>\n                        Your NetID:\n                    </body>\n                    <br />\n                    <input type=\"text\" value={student} onChange={(e) => setStudent(e.target.value)} />\n                </div> \n\n                <div className=\"page_txt\">\n                <div className=\"write-review\">\n                    <br />\n                    <body>\n                        Write a review:\n                    </body>\n                    <br />\n                    <select value={dept ?? \"Select a department\"} onChange={(e) => setDept(e.target.value)}>\n                        <option value=\"\">Select a department</option>\n                        {depts.map(d => <option value={d.id}>{d.id + \" - \" + d.name}</option>)}\n                    </select>\n                    {dept && <br />}\n                    {dept && <select value={course ?? \"Select a course\"} onChange={(e) => setCourse(e.target.value)}>\n                        <option value=\"\">Select a course</option>\n                        {courses.map(c => <option value={c.number}>{c.title}</option>)}\n                    </select>}\n                    {course && <br />}\n                    {course && <select value={offering ?? \"Select an offering\"} onChange={(e) => setOffering(e.target.value)}>\n                        <option value=\"\">Select an offering</option>\n                        {offerings.map(o => <option value={o.id}>{o.semester + \" - \" + o.CRN}</option>)}\n                    </select>}\n                    {offering && <br />}\n                    {offering && <select value={professor ?? \"Select a professor\"} onChange={(e) => setProfessor(e.target.value)}>\n                        <option value=\"\">Select a professor</option>\n                        {professors.map(p => <option value={p.relationId}>{p.name}</option>)}\n                    </select>}\n                    <br />\n                    <br />\n                    {professor && student && (\n                        <div>\n                            <p>{review ? \"Update \" : \"Write \"}Your Review:</p>\n                            <textarea style={{ width: '70%', height: '150px' }} value={reviewInput} onChange={(e) => setReviewInput(e.target.value)} />\n                            <br />\n                            <p>\n                            Rating (out of 5):\n                            </p>\n                            <input type=\"number\" value={ratingInput} onChange={(e) => setRatingInput(e.target.value)} />\n                            <br />\n                            <button className=\"border-2 border-gray-400 h-8 px-2 rounded-lg\" onClick={() => { review ? updateReview() : addReview() }}>{review ? \"Update\" : \"Post\"}</button>\n                            <br />\n                            {review && <button className=\"border-2 border-gray-400 h-8 px-2 rounded-lg\" onClick={() => deleteReview()}>Remove</button>}\n                        </div>\n                    )}\n                </div>\n                </div>\n                <div className=\"existing-reviews\">\n                    <body>\n                    Your reviews:\n                    </body>\n                    \n                    <br/>\n                    <body>\n                        {reviews.map((r,i) => {\n                            return <div className=\"existing-review-box\" key={i}>\n                                <p>{`${r.courseNumber} - ${r.rating}/5`}</p>\n                                <p>{r.name}</p>\n                                <p>{`${r.semester} - ${r.crn}`}</p>\n                            </div>\n                        })}\n                    </body>\n                </div>\n            </div>\n        </section>\n    </body>\n}\n\nexport default Reviews;","import './Style.css'\nimport query from './api'\nimport { Link, useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react';\n\nfunction CourseDetails() {\n    const { courseNumber } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [professors, setProfessors] = useState([]);\n\n    useEffect(() => {\n        let queryStr = `SELECT p.name, semester, rating, review, s.name\n        FROM Offerings o\n        JOIN OfferingsToProfessorRelations opr ON opr.offering = o.id\n        JOIN Reviews r ON r.offeringToProfessorRelation = opr.id\n        JOIN Professors p ON opr.professor = p.netid\n        JOIN Students s ON r.student = s.netid\n        WHERE courseNumber = \"${courseNumber}\"\n        ORDER BY semester DESC`;\n        query(queryStr).then(res => {\n            let newReviews = res.map(elem => {\n                return {\n                    name: elem[0],\n                    semester: elem[1],\n                    rating: elem[2],\n                    review: elem[3],\n                    student: elem[4]\n                }\n            });\n            setReviews(newReviews);\n        });\n\n        queryStr = `SELECT name, AVG(avgRating) as rating\n        FROM Offerings o\n        JOIN OfferingsToProfessorRelations opr ON opr.offering = o.id\n        JOIN Professors p ON opr.professor = p.netid\n        WHERE courseNumber = \"${courseNumber}\"\n        GROUP BY netid\n        ORDER BY rating DESC`;\n        query(queryStr).then(res=>{\n            let newProfessors = res.map(elem => {\n                return {\n                    name: elem[0],\n                    rating: elem[1]\n                }\n            });\n            setProfessors(newProfessors);\n        });\n    }, [courseNumber]);\n\n    return <body>\n        <header className=\"flex\">\n            <span className=\"header_text\">RateM</span>\n            <img className=\"header_image\" src=\"http://ansatuiuc.web.engr.illinois.edu/images/Illinois_Block_I.png\" alt=\"Block I\"></img>\n            <span className=\"header_text\">Professor</span>\n        </header>\n        <section className=\"body\">\n            <div>\n                <p>Professors who taught {courseNumber}</p>\n            </div>\n            <div className=\"existing-reviews\" style={{float: \"none\"}}>\n                {professors.map((r, i) => <div className=\"existing-review-box\" key={i}>\n                    <p>{`${r.name} - ${r.rating??\"Not Reviewed\"}` + (r.rating ? \"/5\" : \"\") }</p>\n                </div>)}\n            </div>\n            <br/>\n            <div>\n                <p>Reviews for {courseNumber}</p>\n            </div>\n            <div className=\"existing-reviews\">\n                {reviews.map((r, i) => <div className=\"existing-review-box\" key={i}>\n                    <p>{`${r.name} - ${r.rating}/5`}</p>\n                    <p>{r.semester}</p>\n                    <p>{r.review}</p>\n                    <p style={{alignSelf: \"flex-end\"}}>{`-${r.student}`}</p>\n                </div>)}\n                {!reviews.length && <div>\n                    <p> No Reviews Found!</p>\n                    <Link className=\"border-2 border-gray-400 h-8 px-2 rounded-lg\" to=\"/your-reviews\">\n                        Write Your Own Review!\n                    </Link>\n                </div>}\n            </div>\n        </section>\n    </body>\n}\n\nexport default CourseDetails;","import './App.css';\nimport LoginPage from './containers/LoginPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Home from './Home';\nimport Search from './Search';\nimport AdvancedQueryOne from './AdvOne';\nimport AdvancedQueryTwo from './AdvTwo';\nimport Reviews from './Reviews';\nimport CourseDetails from './CourseDetails';\n\nfunction App() {\n  return <Router basename={process.env.PUBLIC_URL}>\n    <div id=\"navbar\">\n      <div className=\"header\">\n        <Link className=\"header_btn\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\"header_btn\" to=\"/search\">\n          Search\n        </Link>\n        <Link className=\"header_btn\" to=\"/queryOne\">\n          Top 15 Professors\n        </Link>\n        <Link className=\"header_btn\" to=\"/queryTwo\">\n          Most Reviewed Classes\n        </Link>\n        <Link className=\"header_btn\" to=\"/your-reviews\">\n          Your Reviews\n        </Link>\n      </div>\n      </div>\n      <br />\n\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/queryOne\">\n          <AdvancedQueryOne />\n        </Route>\n        <Route path=\"/queryTwo\">\n          <AdvancedQueryTwo />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path=\"/your-reviews\">\n          <Reviews />\n        </Route>\n        <Route path=\"/course/:courseNumber\">\n          <CourseDetails />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n  </Router>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}